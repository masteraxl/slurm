<!--#include virtual="header.txt"-->

<h1><a name="top">SLURM Job Accounting Storage Plugin API</a></h1>

<h2> Overview</h2>
<p> This document describes SLURM Job Accounting Storage plugins and the API that
defines them. It is intended as a resource to programmers wishing to write
their own SLURM Job Accounting Storage plugins. This is version 1 of the API.

<p>SLURM Job Accounting Storage plugins must conform to the
SLURM Plugin API with the following specifications:

<p><span class="commandline">const char
plugin_name[]="<i>full&nbsp;text&nbsp;name</i>"
<p style="margin-left:.2in">
A free-formatted ASCII text string that identifies the plugin.

<p><span class="commandline">const char
plugin_type[]="<i>major/minor</i>"</span><br>
<p style="margin-left:.2in">
The major type must be &quot;jobacct_storage.&quot;
The minor type can be any suitable name
for the type of accounting package. We currently use
<ul>
<li><b>filetxt</b>&#151;Information written to a text file.
<li><b>mysql</b>&#151; Store information in a mysql database.
<li><b>pgsql</b>&#151; Store information in a postgresql database.
<li><b>none</b>&#151; Information is not stored anywhere.
</ul>
<p>The programmer is urged to study 
<span class="commandline">src/plugins/jobacct_storage/mysql</span>
for a sample implementation of a SLURM Job Accounting Storage plugin.
<p> The Job Accounting Storage plugin was written to be a interface
to storage data collected by the Job Accounting Gather plugin.  When
adding a new database you may want to add common functions in a common
file in the src/common dir.  Refer to src/common/mysql_common.c/.h for an
example so other plugins can also use that database type to write out
information. 
<p class="footer"><a href="#top">top</a>


<h2>API Functions</h2>

The Job Accounting Storage API uses hooks in the slurmctld.

<p>All of the following functions are required. Functions which are not
implemented must be stubbed. 

<h4>Functions called by the jobacct_storage plugin</h4>

<p class="commandline">int jobacct_storage_p_init(char *location) 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_init() is called to initiate a connection to the
database server and check the state of the database table to make sure
they are in sync with the table definitions in the plugin.  
Put global initialization here. Or open file or anything to initialize
the plugin.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">location</span> (input) database name or log
file location.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">int jobacct_storage_p_fini() 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_fini() is called at the end of the program that has
called jobacct_storage_p_init this function closes the connection to
the database or logfile.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">none</span>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">
int jobacct_storage_p_job_start(struct job_record *job_ptr) 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_job_start() is called in the jobacct plugin when a
job starts, inserting information into the database about the new job.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">job_ptr</span> (input) information about the job in 
slurmctld.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">
int jobacct_storage_p_job_complete(struct job_record *job_ptr) 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_job_complete() is called in the jobacct plugin when
a job completes, this updates info about end of a job.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">job_ptr</span> (input) information about the job in 
slurmctld.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">
int jobacct_storage_p_step_start(struct step_record *step_ptr) 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_step_start() is called in the jobacct plugin at the
allocation of a new step in the slurmctld, this inserts info about the
beginning of a step.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">step_ptr</span> (input) information about the step in
slurmctld.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">
int jobacct_storage_p_step_complete(struct step_record *step_ptr) 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_step_complete() is called in the jobacct plugin at
the end of a step in the slurmctld, this updates the ending
information about a step.
<p style="margin-left:.2in"><b>Arguments</b>:<br> 
<span class="commandline">step_ptr</span> (input) information about the step in
slurmctld.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">
int jobacct_storage_p_suspend(struct job_record *job_ptr) 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_suspend() is called in the jobacct plugin when a
job is suspended or resumed in the slurmctld, this updates the
database about the suspended time of the job. 
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">job_ptr</span> (input) information about the job in 
slurmctld.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">none</span>

<p class="commandline">
void jobacct_storage_p_get_jobs(List job_list, List selected_steps,
List selected_parts, void *params) 
<p style="margin-left:.2in"><b>Description</b>:<br>
jobacct_storage_p_get_jobs() is called to get a list of jobs from the
database given the specific inputs. 
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">List job_list </span> (input/output) list to
be filled with jobacct_job_rec_t.<br>
<span class="commandline">List selected_steps </span>
(input) list containing type jobacct_select_step_t to query against.<br>
<span class="commandline">List selected_parts </span>
(input) list containing char *'s of names of partitions to query against.<br>
<span class="commandline">void *params </span>
(input) to be cast as sacct_parameters_t in the plugin.

<p style="margin-left:.2in">jobacct_job_rec_t, jobacct_select_step_t,
and sacct_parameters_t are
all defined in common/slurm_jobacct.h
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">none</span> 

<p class="commandline">
void jobacct_storage_p_archive(List selected_parts, void *params) 
<p style="margin-left:.2in"><b>Description</b>:<br>
database_p_jobcomp_archive() used to archive old data.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline">List selected_parts </span>
(input) list containing char *'s of names of partitions to query against.<br>
<span class="commandline">void *params </span>
(input) to be cast as sacct_parameters_t in the plugin.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">none</span> 

<p class="footer"><a href="#top">top</a>


<h2>Parameters</h2>
<p>These parameters can be used in the slurm.conf to set up
connections to the database all have defaults based on the plugin type
used.
<dl>
<dt><span class="commandline">JobAcctStorageType</span>
<dd>Specifies which plugin should be used.
<dt><span class="commandline">JobAcctStorageLoc</span>
<dd>Let the plugin the name of the logfile/database name to use.
<dt><span class="commandline">JobAcctStorageHost</span>
<dd>Let the plugin know the host where the database is.
<dt><span class="commandline">JobAcctStoragePort</span>
<dd>Let the plugin know the port to connect to.
<dt><span class="commandline">JobAcctStorageUser</span>
<dd>Let the plugin know the name of the user to connect to the
database with.
<dt><span class="commandline">JobAcctStoragePass</span>
<dd>Let the plugin know the password of the user connecting to the database.
</dl>

<h2>Versioning</h2>
<p> This document describes version 1 of the SLURM Job Accounting Storage API. Future 
releases of SLURM may revise this API. A Job Accounting Storage plugin conveys its
ability to implement a particular API version using the mechanism outlined
for SLURM plugins.
<p class="footer"><a href="#top">top</a>

<p style="text-align:center;">Last modified 23 May 2007</p>

<!--#include virtual="footer.txt"-->
