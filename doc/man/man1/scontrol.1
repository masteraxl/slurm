.TH SCONTROL "1" "July 2009" "scontrol 2.0" "Slurm components"

.SH "NAME"
scontrol \- Used view and modify Slurm configuration and state.

.SH "SYNOPSIS"
\fBscontrol\fR [\fIOPTIONS\fR...] [\fICOMMAND\fR...]

.SH "DESCRIPTION"
\fBscontrol\fR is used to view or modify Slurm configuration including: job, 
job step, node, partition, reservation, and overall system configuration. Most 
of the commands can only be executed by user root. If an attempt to view or modify 
configuration information is made by an unauthorized user, an error message 
will be printed and the requested action will not occur. If no command is 
entered on the execute line, \fBscontrol\fR will operate in an interactive 
mode and prompt for input. It will continue prompting for input and executing 
commands until explicitly terminated. If a command is entered on the execute 
line, \fBscontrol\fR will execute that command and terminate. All commands 
and options are case\-insensitive, although node names, partition names, and 
reservation names are case\-sensitive (node names "LX" and "lx" are distinct). 
All commands and options can be abbreviated to the extent that the 
specification is unique.

.SH "OPTIONS"
.TP
\fB\-a\fR, \fB\-\-all\fR
When the \fIshow\fR command is used, then display all partitions, their jobs 
and jobs steps. This causes information to be displayed about partitions 
that are configured as hidden and partitions that are unavailable to user's 
group.
.TP
\fB\-d\fR, \fB\-\-detail\fR
Causes the \fBshow\fR command to provide additional details where available.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print a help message describing the usage of scontrol.
.TP
\fB\-\-hide\fR
Do not display information about hidden partitions, their jobs and job steps. 
By default, neither partitions that are configured as hidden nor those partitions 
unavailable to user's group will be displayed (i.e. this is the default behavior).
.TP
\fB\-o\fR, \fB\-\-oneliner\fR
Print information one line per record.
.TP
\fB\-Q\fR, \fB\-\-quiet\fR
Print no warning or informational messages, only fatal error messages.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Print detailed event logging. Multiple \fB\-v\fR's will further increase 
the verbosity of logging. By default only errors will be displayed.

.TP
\fB\-V\fR , \fB\-\-version\fR
Print version information and exit.
.TP
\fBCOMMANDS\fR

.TP
\fBall\fP
Show all partitions, their jobs and jobs steps. This causes information to be 
displayed about partitions that are configured as hidden and partitions that
are unavailable to user's group.

.TP
\fBabort\fP
Instruct the Slurm controller to terminate immediately and generate a core file.

.TP
\fBcheckpoint\fP \fICKPT_OP\fP \fIID\fP
Perform a checkpoint activity on the job step(s) with the specified identification.
\fIID\fP can be used to identify a specific job (e.g. "<job_id>",
which applies to all of its existing steps)
or a specific job step (e.g. "<job_id>.<step_id>").
Acceptable values for \fICKPT_OP\fP include:
.RS
.TP
\fIdisable\fP (disable future checkpoints)
.TP 
\fIenable\fP (enable future checkpoints)
.TP
\fIable\fP (test if presently not disabled, report start time if checkpoint in progress)
.TP
\fIcreate\fP (create a checkpoint and continue the job step)
.TP
\fIvacate\fP (create a checkpoint and terminate the job step) 
.TP
\fIerror\fP (report the result for the last checkpoint request, error code and message) 
.TP
\fIrestart\fP (restart execution of the previously checkpointed job steps)
.TP
Acceptable values for \fICKPT_OP\fP include:
.TP
\fIMaxWait=<seconds>\fP maximum time for checkpoint to be written. 
Default value is 10 seconds.
Valid with \fIcreate\fP and \fIvacate\fP options only.
.TP
\fIImageDir=<directory_name>\fP Location of checkpoint file.
Valid with \fIcreate\fP, \fIvacate\fP and \fIrestart\fP options only.
This value takes precedent over any \-\-checkpoint\-dir value specified
at job submission time.
.TP
\fIStickToNodes\fP If set, resume job on the same nodes are previously used.
Valid with the \fIrestart\fP option only.
.RE

.TP
\fBcreate\fP \fISPECIFICATION\fP
Create a new partition or reservation.  See the full list of parameters 
below.  Include the tag "res" to create a reservation without specifying
a reservation name.

.TP
\fBcompleting\fP
Display all jobs in a COMPLETING state along with associated nodes in either a 
COMPLETING or DOWN state.

.TP
\fBdelete\fP \fISPECIFICATION\fP
Delete the entry with the specified \fISPECIFICATION\fP.
The two \fISPECIFICATION\fP choices are \fIPartitionName=<name>\fP and
\fIReservation=<name>\fP.  On Dynamically laid out Bluegene systems
\fIBlockName=<name>\fP also works.

.TP
\fBdetail\fP
Causes the \fIshow\fP command to provide additional details where available,
namely the specific CPUs and NUMA memory allocated on each node. 
Note that on computers with hyperthreading enabled and SLURM configured to
allocate cores, each listed CPU represents one physical core.
Each hyperthread on that core can be allocated a separate task, so a job's
CPU count and task count may differ.
See the \fB\-\-cpu_bind\fR and \fB\-\-mem_bind\fR option descriptions in
srun man pages for more information.
The \fBdetail\fP option is currently only supported for the \fIshow job\fP 
command.

.TP
\fBexit\fP
Terminate the execution of scontrol.
This is an independent command with no options meant for use in interactive mode.

.TP
\fBhelp\fP
Display a description of scontrol options and commands.

.TP
\fBhide\fP
Do not display partition, job or jobs step information for partitions that are 
configured as hidden or partitions that are unavailable to the user's group. 
This is the default behavior.

.TP
\fBnotify\fP \fIjob_id\fP \fImessage\fP
Send a message to standard error of the srun command associated with the 
specified \fIjob_id\fP.

.TP
\fBoneliner\fP
Print information one line per record.

.TP
\fBpidinfo\fP \fIproc_id\fP
Print the Slurm job id and scheduled termination time corresponding to the 
supplied process id, \fIproc_id\fP, on the current node.  This will work only
with processes on node on which scontrol is run, and only for those processes
spawned by SLURM and their descendants.

.TP
\fBlistpids\fP [\fIjob_id\fP[.\fIstep_id\fP]] [\fINodeName\fP]
Print a listing of the process IDs in a job step (if JOBID.STEPID is provided),
or all of the job steps in a job (if \fIjob_id\fP is provided), or all of the job
steps in all of the jobs on the local node (if \fIjob_id\fP is not provided 
or \fIjob_id\fP is "*").  This will work only with processes on the node on 
which scontrol is run, and only for those processes spawned by SLURM and
their descendants. Note that some SLURM configurations
(\fIProctrackType\fP value of \fIpgid\fP or \fIaix\fP) 
are unable to identify all processes associated with a job or job step.

Note that the NodeName option is only really useful when you have multiple
slurmd daemons running on the same host machine.  Multiple slurmd daemons on
one host are, in general, only used by SLURM developers.

.TP
\fBping\fP
Ping the primary and secondary slurmctld daemon and report if 
they are responding.

.TP
\fBquiet\fP
Print no warning or informational messages, only fatal error messages.

.TP
\fBquit\fP
Terminate the execution of scontrol.

.TP
\fBreconfigure\fP
Instruct all Slurm daemons to re\-read the configuration file. 
This command does not restart the daemons.
This mechanism would be used to modify configuration parameters (Epilog, 
Prolog, SlurmctldLogFile, SlurmdLogFile, etc.) register the physical 
addition or removal of nodes from the cluster or recognize the change 
of a node's configuration, such as the addition of memory or processors. 
The Slurm controller (slurmctld) forwards the request all other daemons 
(slurmd daemon on each compute node). Running jobs continue execution.
Most configuration parameters can be changed by just running this command, 
however, SLURM daemons should be shutdown and restarted if any of these 
parameters are to be changed: AuthType, BackupAddr, BackupController, 
ControlAddr, ControlMach, PluginDir, StateSaveLocation, SlurmctldPort 
or SlurmdPort.

.TP
\fBresume\fP \fIjob_id\fP
Resume a previously suspended job.

.TP
\fBrequeue\fP \fIjob_id\fP
Requeue a running or pending SLURM batch job.

.TP
\fBsetdebug\fP \fILEVEL\fP
Change the debug level of the slurmctld daemon.
\fILEVEL\fP may be an integer value between zero and nine (using the 
same values as \fISlurmctldDebug\fP in the \fIslurm.conf\fP file) or 
the name of the most detailed message type to be printed: 
"quiet", "fatal", "error", "info", "verbose", "debug", "debug2", "debug3", 
"debug4", or "debug5".
This value is temporary and will be overwritten whenever the slurmctld 
daemon reads the slurm.conf configuration file (e.g. when the daemon 
is restarted or "scontrol reconfigure" is executed).

.TP
\fBshow\fP \fIENTITY\fP \fIID\fP
Display the state of the specified entity with the specified identification.
\fIENTITY\fP may be \fIconfig\fP, \fIdaemons\fP, \fIjob\fP, \fInode\fP, 
\fIpartition\fP, \fIreservation\fP, \fIslurmd\fP, \fIstep\fP, \fItopology\fP,
\fIhostlist\fP or \fIhostnames\fP 
(also \fIblock\fP or \fIsubbp\fP on BlueGene systems).
\fIID\fP can be used to identify a specific element of the identified 
entity: the configuration parameter name, job ID, node name, partition name, 
reservation name, or job step ID for \fIconfig\fP, \fIjob\fP, \fInode\fP, 
\fIpartition\fP, or \fIstep\fP respectively. 
For an \fIENTITY\fP of \fItopology\fP, the \fIID\fP may be a node or switch name.
If one node name is specified, all switches connected to that node (and 
their parent switches) will be shown.
If more than one node name is specified, only switches that connect to all 
named nodes will be shown.
\fIhostnames\fP takes an optional hostlist expression as input and 
writes a list of individual host names to standard output (one per 
line). If no hostlist expression is supplied, the contents of the 
SLURM_NODELIST environment variable is used. For example "tux[1\-3]" 
is mapped to "tux1","tux2" and "tux3" (one hostname per line).
\fIhostlist\fP takes a list of host names and prints the hostlist 
expression for them (the inverse of \fIhostnames\fP). 
\fIhostlist\fP can also take the absolute pathname of a file 
(beginning with the character '/') containing a list of hostnames.
Multiple node names may be specified using simple node range expressions 
(e.g. "lx[10\-20]"). All other \fIID\fP values must identify a single 
element. The job step ID is of the form "job_id.step_id", (e.g. "1234.1").
\fIslurmd\fP reports the current status of the slurmd daemon executing 
on the same node from which the scontrol command is executed (the 
local host). It can be useful to diagnose problems.
By default, all elements of the entity type specified are printed.

.TP
\fBshutdown\fP \fIOPTION\fP
Instruct Slurm daemons to save current state and terminate.
By default, the Slurm controller (slurmctld) forwards the request all 
other daemons (slurmd daemon on each compute node). 
An \fIOPTION\fP of \fIslurmctld\fP or \fIcontroller\fP results in 
only the slurmctld daemon being shutdown and the slurmd daemons 
remaining active.

.TP
\fBsuspend\fP \fIjob_id\fP
Suspend a running job.
Use the \fIresume\fP command to resume its execution.
User processes must stop on receipt of SIGSTOP signal and resume 
upon receipt of SIGCONT for this operation to be effective.
Not all architectures and configurations support job suspension.

.TP
\fBtakeover\fP
Instruct SLURM's backup controller (slurmctld) to take over system control.
SLURM's backup controller requests control from the primary and waits for 
its termination. After that, it switches from backup mode to controller
mode. If primary controller can not be contacted, it directly switches to 
controller mode. This can be used to speed up the SLURM controller 
fail\-over mechanism when the primary node is down.
This can be used to minimize disruption if the computer executing the
primary SLURM controller is scheduled down.
(Note: SLURM's primary controller will take the control back at startup.)

.TP
\fBupdate\fP \fISPECIFICATION\fP 
Update job, node, partition, or reservation configuration per the supplied 
specification. \fISPECIFICATION\fP is in the same format as the Slurm 
configuration file and the output of the \fIshow\fP command described above. It
may be desirable to execute the \fIshow\fP command (described above) on the 
specific entity you which to update, then use cut\-and\-paste tools to enter 
updated configuration values to the \fIupdate\fP. Note that while most 
configuration values can be changed using this command, not all can be changed 
using this mechanism. In particular, the hardware configuration of a node or 
the physical addition or removal of nodes from the cluster may only be 
accomplished through editing the Slurm configuration file and executing the \fIreconfigure\fP command (described above).

.TP
\fBverbose\fP
Print detailed event logging. 
This includes time\-stamps on data structures, record counts, etc.

.TP
\fBversion\fP
Display the version number of scontrol being executed.

.TP
\fB!!\fP
Repeat the last command executed.

.TP
\fBSPECIFICATIONS FOR UPDATE COMMAND, JOBS\fR
.TP
\fIAccount\fP=<account>
Account name to be changed for this job's resource use.
Value may be cleared with blank data value, "Account=".
.TP
\fIConnection\fP=<type>
Reset the node connection type.
Possible values on Blue Gene are "MESH", "TORUS" and "NAV" 
(mesh else torus).
.TP
\fIContiguous\fP=<yes|no>
Set the job's requirement for contiguous (consecutive) nodes to be allocated. 
Possible values are "YES" and "NO".
.TP
\fIDependency\fP=<job_id>
Defer job's initiation until specified job_id completes.
Cancel dependency with job_id value of "0", "Dependency=0".
.TP
\fIEligibleTime\fP=<time_spec>
Equivalent to \fIStartTime\fP. 
.TP
\fIExcNodeList\fP=<nodes>
Set the job's list of excluded node. Multiple node names may be 
specified using simple node range expressions (e.g. "lx[10\-20]"). 
Value may be cleared with blank data value, "ExcNodeList=".
.TP
\fIExitCode\fP=<exit>:<sig>
Exit status reported for the job by the wait() function.
The first number is the exit code, typically as set by the exit() function.
The second number of the signal that caused the process to terminate if
it was terminated by a signal.
.TP
\fIFeatures\fP=<features>
Set the job's required node features. Multiple values 
may be comma separated if all features are required (AND operation) or 
separated by "|" if any of the specified features are required (OR operation).
Value may be cleared with blank data value, "Features=".
.TP
\fIGeometry\fP=<geo>
Reset the required job geometry.
On Blue Gene the value should be three digits separated by 
"x" or ",". The digits represent the allocation size in 
X, Y and Z dimensions (e.g. "2x3x4").
.TP
\fIRotate\fP=<yes|no>
Permit the job's geometry to be rotated.
Possible values are "YES" and "NO".
.TP
\fIJobId\fP=<id>
Identify the job to be updated. This specification is required.
.TP
\fIMinCores\fP=<count>
Set the job's minimum number of cores per socket to the specified value.
.TP
\fIMinMemoryCPU\fP=<megabytes>
Set the job's minimum real memory required per allocated CPU to the specified 
value.
Either \fIMinMemoryCPU\fP or \fIMinMemoryNode\fP may be set, but not both.
.TP
\fIMinMemoryNode\fP=<megabytes>
Set the job's minimum real memory required per node to the specified value.
Either \fIMinMemoryCPU\fP or \fIMinMemoryNode\fP may be set, but not both.
.TP
\fIMinProcs\fP=<count>
Set the job's minimum number of processors per node to the specified value.
.TP
\fIMinSockets\fP=<count>
Set the job's minimum number of sockets per node to the specified value.
.TP
\fIMinThreads\fP=<count>
Set the job's minimum number of threads per core to the specified value.
.TP
\fIMinTmpDisk\fP=<megabytes>
Set the job's minimum temporary disk space required per node to the specified value.
.TP
\fIName\fP=<name>
Set the job's name to the specified value.
.TP
\fINice\fP[=delta]
Adjust job's priority by the specified value. Default value is 100.
.TP
\fIPartition\fP=<name>
Set the job's partition to the specified value.
.TP
\fIPriority\fP=<number>
Set the job's priority to the specified value.
Note that a job priority of zero prevents the job from ever being scheduled.
By setting a job's priority to zero it is held.
Set the priority to a non\-zero value to permit it to run.
.TP
\fIReqCores\fP=<count>
Set the job's count of required cores to the specified value.
.TP
\fIReqNodeList\fP=<nodes>
Set the job's list of required node. Multiple node names may be specified using 
simple node range expressions (e.g. "lx[10\-20]"). 
Value may be cleared with blank data value, "ReqNodeList=".
.TP
\fIReqNodes\fP=<min_count>[\-<max_count>]
Set the job's minimum and optionally maximum count of nodes to be allocated.
.TP
\fIReqProcs\fP=<count>
Set the job's count of required processes to the specified value.
.TP
\fIReqSockets\fP=<count>
Set the job's count of required sockets to the specified value.
.TP
\fIReqThreads\fP=<count>
Set the job's count of required threads to the specified value.
.TP
\fIShared\fP=<yes|no>
Set the job's ability to share nodes with other jobs. Possible values are
"YES" and "NO".
.TP
\fIStartTime\fP=<time_spec>
Set the job's earliest initiation time.
It accepts times of the form \fIHH:MM:SS\fR to run a job at
a specific time of day (seconds are optional).
(If that time is already past, the next day is assumed.)
You may also specify \fImidnight\fR, \fInoon\fR, or
\fIteatime\fR (4pm) and you can have a time\-of\-day suffixed
with \fIAM\fR or \fIPM\fR for running in the morning or the evening.
You can also say what day the job will be run, by specifying
a date of the form \fIMMDDYY\fR or \fIMM/DD/YY\fR or \fIMM.DD.YY\fR, 
or a date and time as \fIYYYY\-MM\-DD[THH[:MM[:SS]]]\fR.  You can also
give times like \fInow + count time\-units\fR, where the time\-units
can be \fIminutes\fR, \fIhours\fR, \fIdays\fR, or \fIweeks\fR
and you can tell SLURM to run the job today with the keyword
\fItoday\fR and to run the job tomorrow with the keyword
\fItomorrow\fR.
.TP
\fITimeLimit\fP=<time>
The job's time limit.
Output format is [days\-]hours:minutes:seconds or "UNLIMITED".
Input format (for \fBupdate\fR command) set is minutes, minutes:seconds, 
hours:minutes:seconds, days\-hours, days\-hours:minutes or 
days\-hours:minutes:seconds.
Time resolution is one minute and second values are rounded up to 
the next minute.

.TP
\fBSPECIFICATIONS FOR UPDATE COMMAND, NODES\fR
.TP
\fINodeName\fP=<name>
Identify the node(s) to be updated. Multiple node names may be specified using 
simple node range expressions (e.g. "lx[10\-20]"). This specification is required.
.TP
\fIFeatures\fP=<features>
Identify features to be associated with the specified nodes.
Any previously identified features will be overwritten with the new value.
\fBNOTE:\fR The Features associated with nodes will be reset to
the values specified in slurm.conf (if any) upon slurmctld restart 
or reconfiguration.
Update slurm.conf with any changes meant to be persistent.

.TP
\fIReason\fP=<reason>
Identify the reason the node is in a "DOWN" or "DRAINED", "DRAINING", 
"FAILING" or "FAIL" state.
Use quotes to enclose a reason having more than one word.

.TP
\fIState\fP=<state>
Identify the state to be assigned to the node. Possible values are  "NoResp", 
"ALLOC", "ALLOCATED", "DOWN", "DRAIN", "FAIL", "FAILING", "IDLE", "MAINT",
"POWER_DOWN", "POWER_UP", or "RESUME". 
If you want to remove a node from service, you typically want to set 
it's state to "DRAIN". 
"FAILING" is similar to "DRAIN" except that some applications will  
seek to relinquish those nodes before the job completes.
"RESUME" is not an actual node state, but will return a "DRAINED", "DRAINING", 
or "DOWN" node to service, either "IDLE" or "ALLOCATED" state as appropriate.
Setting a node "DOWN" will cause all running and suspended jobs on that
node to be terminated.
"POWER_DOWN" and "POWER_UP" will use the configured \fISuspendProg\fR and
\fIResumeProg\fR programs to explicitly place a node in or out of a power 
saving mode.
The "NoResp" state will only set the "NoResp" flag for a node without
changing its underlying state.
While all of the above states are valid, some of them are not valid new
node states given their prior state. 
Generally only "DRAIN", "FAIL" and "RESUME" should be used.

.TP
\fIWeight\fP=<weight>
Identify weight to be associated with specified nodes. This allows 
dynamic changes to weight associated with nodes, which will be used 
for the subsequent node allocation decisions. 
Any previously identified weight will be overwritten with the new value.\fBNOTE:\fR The \fIWeight\fP associated with nodes will be reset to
the values specified in slurm.conf (if any) upon slurmctld restart
or reconfiguration.
Update slurm.conf with any changes meant to be persistent.

.TP
\fBSPECIFICATIONS FOR CREATE, UPDATE, AND DELETE COMMANDS, PARTITIONS\fR
.TP
\fIAllowGroups\fP=<name>
Identify the user groups which may use this partition. 
Multiple groups may be specified in a comma separated list. 
To permit all groups to use the partition specify "AllowGroups=ALL".
.TP
\fIDefault\fP=<yes|no>
Specify if this partition is to be used by jobs which do not explicitly 
identify a partition to use. 
Possible output values are "YES" and "NO".
In order to change the default partition of a running system, 
use the scontrol update command and set Default=yes for the partition
that you want to become the new default.

.TP
\fIHidden\fP=<yes|no>
Specify if the partition and its jobs should be hidden from view. 
Hidden partitions will by default not be reported by SLURM APIs 
or commands. 
Possible values are "YES" and "NO".
.TP
\fIMaxNodes\fP=<count>
Set the maximum number of nodes which will be allocated to any single job 
in the partition. Specify a number, "INFINITE" or "UNLIMITED".  (On a
Bluegene type system this represents a c\-node count.)

.TP
\fIMaxTime\fP=<time>
The maximum run time for jobs.
Output format is [days\-]hours:minutes:seconds or "UNLIMITED".
Input format (for \fBupdate\fR command) is minutes, minutes:seconds, 
hours:minutes:seconds, days\-hours, days\-hours:minutes or 
days\-hours:minutes:seconds.
Time resolution is one minute and second values are rounded up to 
the next minute.

.TP
\fIMinNodes\fP=<count>
Set the minimum number of nodes which will be allocated to any single job 
in the partition.   (On a Bluegene type system this represents a c\-node count.)

.TP
\fINodes\fP=<name>
Identify the node(s) to be associated with this partition. Multiple node names 
may be specified using simple node range expressions (e.g. "lx[10\-20]"). 
Note that jobs may only be associated with one partition at any time.
Specify a blank data value to remove all nodes from a partition: "Nodes=".

.TP
\fIPartitionName\fP=<name>
Identify the partition to be updated. This specification is required.

.TP
\fIRootOnly\fP=<yes|no>
Specify if only allocation requests initiated by user root will be satisfied. 
This can be used to restrict control of the partition to some meta\-scheduler. 
Possible values are "YES" and "NO".

.TP
\fIShared\fP=<yes|no|exclusive|force>[:<job_count>]
Specify if nodes in this partition can be shared by multiple jobs. 
Possible values are "YES", "NO", "EXCLUSIVE" and "FORCE".
An optional job count specifies how many jobs can be allocated to use
each resource.

.TP
\fIState\fP=<up|down>
Specify if jobs can be allocated nodes in this partition. 
Possible values are"UP" and "DOWN".
If a partition allocated nodes to running jobs, those jobs will continue 
execution even after the partition's state is set to "DOWN". The jobs 
must be explicitly canceled to force their termination.

.TP
\fBSPECIFICATIONS FOR CREATE, UPDATE, AND DELETE COMMANDS, RESERVATIONS\fR
.TP

.TP
\fIReservation\fP=<name>
Identify the name of the reservation to be created, updated, or deleted.  
This parameter is required for update and is the only parameter for delete.  
For create, if you do not want to give a reservation name, use 
"scontrol create res ..." and a name will be created automatically.

.TP
\fILicenses\fP=<license>
Specification of licenses (or other resources available on all 
nodes of the cluster) which are to be reserved.
License names can be followed by an asterisk and count 
(the default count is one).
Multiple license names should be comma separated (e.g.
"Licenses=foo*4,bar").

.TP
\fINodeCnt\fP=<num>
Identify number of nodes to be reserved.  A new reservation must specify either
NodeCnt or Nodes.

.TP
\fINodes\fP=<name>
Identify the node(s) to be reserved. Multiple node names 
may be specified using simple node range expressions (e.g. "Nodes=lx[10\-20]"). 
Specify a blank data value to remove all nodes from a reservation: "Nodes=".
A new reservation must specify either NodeCnt or Nodes.

.TP
\fIStartTime\fP=<time_spec>
The start time for the reservation.  A new reservation must specify a start 
time.  It accepts times of the form \fIHH:MM:SS\fR for
a specific time of day (seconds are optional).
(If that time is already past, the next day is assumed.)
You may also specify \fImidnight\fR, \fInoon\fR, or
\fIteatime\fR (4pm) and you can have a time\-of\-day suffixed
with \fIAM\fR or \fIPM\fR for running in the morning or the evening.
You can also say what day the job will be run, by specifying
a date of the form \fIMMDDYY\fR or \fIMM/DD/YY\fR or \fIMM.DD.YY\fR, 
or a date and time as \fIYYYY\-MM\-DD[THH[:MM[:SS]]]\fR.  You can also
give times like \fInow + count time\-units\fR, where the time\-units
can be \fIminutes\fR, \fIhours\fR, \fIdays\fR, or \fIweeks\fR
and you can tell SLURM to run the job today with the keyword
\fItoday\fR and to run the job tomorrow with the keyword
\fItomorrow\fR.

.TP
\fIEndTime\fP=<time_spec>
The end time for the reservation.  A new reservation must specify an end 
time or a duration.  Valid formats are the same as for StartTime.

.TP
\fIDuration\fP=<time>
The length of a reservation.  A new reservation must specify an end 
time or a duration.  Valid formats are minutes, minutes:seconds, 
hours:minutes:seconds, days\-hours, days\-hours:minutes, 
days\-hours:minutes:seconds, or UNLIMITED.  Time resolution is one minute and 
second values are rounded up to the next minute.

.TP
\fIPartitionName\fP=<name>
Identify the partition to be reserved.

.TP
\fIFlags\fP=<flags>
Flags associated with the reservation. 
In order to remove a flag with the update option, preceed the name with 
a minus sign. For example: Flags=\-MAINT.
Currently supported flags include:
.RS
.TP 12
\fIMAINT\fR
Maintenance mode, receives special accounting treatment
.TP
\fIIGNORE_JOBS\fR
Ignore currently running jobs when creating the reservation.
This can be especially useful when reserving all nodes in the system for maintenance
.TP
\fIDAILY\fR
Repeat the reservation at the same time every day
.TP
\fIWEEKLY\fR
Repeat the reservation at the same time every week
.TP
\fISPEC_NODES\fR
Reservation is for specific nodes (output only)
.RE

.TP
\fIFeatures\fP=<features>
Set the reservation's required node features. Multiple values 
may be "&" separated if all features are required (AND operation) or 
separated by "|" if any of the specified features are required (OR operation).
Value may be cleared with blank data value, "Features=".

.TP
\fIUsers\fP=<user list>
List of users permitted to use the reserved nodes.  
E.g.  Users=jones1,smith2.
A new reservation must specify Users and/or Accounts.

.TP
\fIAccounts\fP=<account list>
List of accounts permitted to use the reserved nodes.  
E.g.  Accounts=physcode1,physcode2.  A user in any of the accounts
may use the reserved nodes.
A new reservation must specify Users and/or Accounts.

.TP
\fBSPECIFICATIONS FOR UPDATE, BLOCK \fR
.TP
Bluegene systems only! 
.TP
\fIBlockName\fP=<name>
Identify the bluegene block to be updated. This specification is required.
.TP
\fIState\fP=<free|error|remove>
This will update the state of a bluegene block to either FREE or ERROR. 
(i.e. update BlockName=RMP0 STATE=ERROR) State error will not allow jobs
to run on the block. \fBWARNING!!!!\fR This will cancel any
running job on the block!  On dynamically laid out systems REMOVE will
free and remove the block from the system.  If the block is smaller
than a midplane every block on that midplane will be removed.
.TP
\fISubBPName\fP=<name>
Identify the bluegene ionodes to be updated (i.e. bg000[0\-3]). This
specification is required.
.TP

.SH "ENVIRONMENT VARIABLES" 
.PP 
Some \fBscontrol\fR options may
be set via environment variables. These environment variables,
along with their corresponding options, are listed below. (Note:
Commandline options will always override these settings.)
.TP 20
\fBSCONTROL_ALL\fR
\fB\-a, \-\-all\fR
.TP
\fBSLURM_CONF\fR
The location of the SLURM configuration file.

.SH "EXAMPLES"
.eo
.br 
# scontrol
.br 
scontrol: show part class
.br 
PartitionName=class TotalNodes=10 TotalCPUs=20 RootOnly=NO
.br 
   Default=NO Shared=NO State=UP MaxTime=0:30:00 Hidden=NO
.br
   MinNodes=1 MaxNodes=2 AllowGroups=students
.br
   Nodes=lx[0031-0040] NodeIndices=31,40,-1
.br 
scontrol: update PartitionName=class MaxTime=60:00 MaxNodes=4
.br 
scontrol: show job 65539
.br 
JobId=65539 UserId=1500 JobState=PENDING TimeLimit=0:20:00
.br 
   Priority=100 Partition=batch Name=job01 NodeList=(null) 
.br 
   StartTime=0 EndTime=0 Shared=0 ReqProcs=1000
.br
   ReqNodes=400 Contiguous=1 MinProcs=4 MinMemoryNode=1024
.br 
   MinTmpDisk=2034 ReqNodeList=lx[3000-3003] 
.br
   Features=(null) JobScript=/bin/hostname 
.br 
scontrol: update JobId=65539 TimeLimit=30:00 Priority=500
.br 
scontrol: show hostnames tux[1-3]
.br
tux1
.br
tux2
.br
tux3
.br
scontrol: create res StartTime=2009-04-01T08:00:00 Duration=5:00:00 Users=dbremer NodeCnt=10
.br
Reservation created: dbremer_1
.br
scontrol: update Reservation=dbremer_1 Flags=Maint NodeCnt=20
.br
scontrol: delete Reservation=dbremer_1
.br
scontrol: quit
.ec

.SH "COPYING"
Copyright (C) 2002\-2007 The Regents of the University of California.
Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
CODE\-OCEC\-09\-009. All rights reserved.
.LP
This file is part of SLURM, a resource management program.
For details, see <https://computing.llnl.gov/linux/slurm/>.
.LP
SLURM is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.
.LP
SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
details.
.SH "FILES"
.LP
/etc/slurm.conf
.SH "SEE ALSO"
\fBscancel\fR(1), \fBsinfo\fR(1), \fBsqueue\fR(1), 
\fBslurm_checkpoint\fR(3),
\fBslurm_create_partition\fR(3),
\fBslurm_delete_partition\fR(3),
\fBslurm_load_ctl_conf\fR(3), 
\fBslurm_load_jobs\fR(3), \fBslurm_load_node\fR(3), 
\fBslurm_load_partitions\fR(3), 
\fBslurm_reconfigure\fR(3),  \fBslurm_requeue\fR(3), \fBslurm_resume\fR(3),
\fBslurm_shutdown\fR(3), \fBslurm_suspend\fR(3),
\fBslurm_takeover\fR(3),
\fBslurm_update_job\fR(3), \fBslurm_update_node\fR(3), 
\fBslurm_update_partition\fR(3),
\fBslurm.conf\fR(5)
