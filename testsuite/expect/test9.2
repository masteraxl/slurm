#!/usr/bin/expect
############################################################################
# Purpose: Stress test of stdout with stdin closed
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
# Note:    This script generates and then deletes files in the working directory 
#          named test9.2.output
############################################################################
# Copyright (C) 2002 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# UCRL-CODE-2002-040.
# 
# This file is part of SLURM, a resource management program.
# For details, see <http://www.llnl.gov/linux/slurm/>.
#  
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
# 
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# 
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
############################################################################
source ./globals

set test_id      "9.2"
set cycle_count  100
set exit_code    0
set file_out     "test$test_id.output"
set node_cnt     "1-4"
set other_opts   "-O"
set task_cnt     $max_stress_tasks

print_header $test_id

# Execute an srun job to print hostname to output_file with task_cnt tasks per node, 
# wait for completion
# Returns 0 on successful completion, returns 1 otherwise
proc run_hostname_job { output_file } {
	global bin_hostname bin_rm number srun node_cnt other_opts task_cnt timeout
	exec $bin_rm -f $output_file

	spawn $srun --input=/dev/null --output=$output_file --error=/dev/null -n$task_cnt -N$node_cnt $other_opts -t1 $bin_hostname
	expect {
		-re "Unable to contact" {
			send_user "\nFAILURE: slurm appears to be down\n"
			return 1  
		}
		timeout {
			send_user "\nFAILURE: srun not responding\n"
			kill_srun
			return 1
		}
		eof {
			wait
		}
	}

	return [wait_for_file $output_file]
}

#
# Run cycle_count jobs to run "hostname" and check output file size
#
set success_cnt 0
set timeout $max_job_delay
for {set inx 0} {$inx < $cycle_count} {incr inx} {
	if {[run_hostname_job $file_out]} {
		set exit_code 1
		continue
	}
	set stdout_lines [get_line_cnt $file_out]
	if {$stdout_lines != $task_cnt} {
		exec $bin_sleep 1
		set stdout_lines [get_line_cnt $file_out]
	}
	if {$stdout_lines != $task_cnt} {
		send_user "\nFAILURE:stdout is incomplete\n"
		set exit_code 1
	} else {
		incr success_cnt
	}
}
exec $bin_rm -f $file_out

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
} else {
	send_user "\nFAILURE: Only $success_cnt of $cycle_count"
	send_user " hostname output tests passed\n"
}
exit $exit_code
