#!/usr/bin/expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test of srun exit code reporting
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2002 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# UCRL-CODE-2002-040.
# 
# This file is part of SLURM, a resource management program.
# For details, see <http://www.llnl.gov/linux/slurm/>.
#  
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
# 
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# 
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
############################################################################
source ./globals

set test_id        "1.33"
set exit_code      0
set exit_script    "./test$test_id.exit.bash"
set test_script    "./test$test_id.bash"
print_header $test_id

#
# Delete left-over scripts and build new ones
#
exec $bin_rm -f $exit_script $test_script
exec echo "#!$bin_bash"                                    >$exit_script
exec echo "RC=`expr \$SLURM_PROCID + 10`"                  >>$exit_script
exec echo "exit \$RC"                                      >>$exit_script


exec echo "#!$bin_bash"                                    >$test_script
exec echo "$srun -N1 -n2 -O $exit_script"                 >>$test_script
#exec echo "RC=\$?"                                        >>$test_script
exec echo "echo srun_exit_code_\$?"                       >>$test_script
exec $bin_chmod 700 $exit_script $test_script

#
# Spawn program and check for exit code messages from srun
#
set sum 0
set timeout $max_job_delay
spawn $srun -N1 -n2 -O $exit_script
expect {
	-re "exit code ($number)" {
		send_user "This error is expected, no worries\n"
		incr sum $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}
if {$sum != 21} {
	send_user "\nFAILURE: srun failed to report exit code\n"
	set exit_code 1
}

#
# Spawn program to check the exit code of srun itself
#
set matches 0
spawn $test_script
expect {
	-re "srun_exit_code_11" {
		send_user "Above error are expected, no worries\n"
		incr matches
		exp_continue
	}
	eof {
		wait
	}
}
if {$matches != 1} {
	send_user "\nFAILURE: srun's exit code is bad\n"
	set exit_code 1
}

#
# Post-processing
#
if {$exit_code == 0} {
	exec $bin_rm -f $exit_script $test_script
	send_user "\nSUCCESS\n"
} else {
	kill_srun
}
exit $exit_code
