#!/usr/bin/expect
############################################################################
# Purpose: Test of SLURM functionality
#          Verify the appropriate job environment variables are set.
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2002 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# UCRL-CODE-217948.
# 
# This file is part of SLURM, a resource management program.
# For details, see <http://www.llnl.gov/linux/slurm/>.
#  
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
# 
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# 
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
############################################################################
source ./globals

set test_id          "1.27"
set exit_code        0
set matches          0

print_header $test_id

#
# Spawn a job via srun to print environment variables
#
set timeout $max_job_delay
spawn $srun -N1 -n1 -t1 $bin_env
expect {
	-re "SLURM_($alpha_under)=($alpha_numeric)" {
		if {[string compare $expect_out(1,string) "CPUS_ON_NODE"] == 0
		&& $expect_out(2,string) > 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "CPUS_PER_TASK"] == 0
		&& $expect_out(2,string) > 0} {
			incr matches
			exp_continue
		}
                if {[string compare $expect_out(1,string) "JOBID"] == 0
		&& $expect_out(2,string) > 0} {
			incr matches
			exp_continue
		}
                if {[string compare $expect_out(1,string) "LAUNCH_NODE_IPADDR"] == 0} {
                        incr matches
			exp_continue
                }
                if {[string compare $expect_out(1,string) "LOCALID"] == 0} {
                        incr matches
			exp_continue
                }
                if {[string compare $expect_out(1,string) "NNODES"] == 0
		&& $expect_out(2,string) > 0} {
                        incr matches
			exp_continue
                }
                if {[string compare $expect_out(1,string) "NODEID"] == 0} {
                        incr matches
			exp_continue
                }
		if {[string compare $expect_out(1,string) "NODELIST"] == 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "NPROCS"] == 0
		&& $expect_out(2,string) > 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "PROCID"] == 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "SRUN_COMM_HOST"] == 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "SRUN_COMM_PORT"] == 0
		&& $expect_out(2,string) > 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "STEPID"] == 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "TASKS_PER_NODE"] == 0
		&& $expect_out(2,string) > 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "TASK_PID"] == 0
		&& $expect_out(2,string) > 0} {
			incr matches
			exp_continue
		}
		if {[string compare $expect_out(1,string) "UMASK"] == 0} {
			incr matches
			exp_continue
		}
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}

if {$matches != 16} {
	send_user "\nFAILURE: Not all SLURM environment variables set ($matches of 10)\n"
	set exit_code 1
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
